#include <stdio.h>
#include <stdlib.h>
#define MAX 5

int priorque[Max];
int front, rear;

void insert_by_prior(int)
{
    if(rear>=MAX-1)
    {
        printf("Queue overflow.");
        return;
    }
    if((front==-1)&&(rear==-1))
    {
        front++;
        rear++;
        priorque[rear]=data;
        return;
    }
    else
    check(data);
    rear++;
}

void delete_by_prior(int data)
{
    int i;
    if((front==-1)&&(rear==-1))
    {
        printf("Queue is empty.")
        return;
    }
    for(i=0;i<rear;i++)
    {
        if(data==priorque[i])
        {
            for(;i<rear;i++)
            {
                priorque[i]=priorque[i+1];
            }
            priorque[i]=-99;
            rear--;
            if(rear==-1)
            front=-1;
            return;
        }
    }
    printf("\n%d not found in the queue.",data);
}

void create()
{
    front=rear=-1;
}

void check(int data)
{
    int i,j;
    for(i=0;i<=rear;i++)
    {
        if(data>=priorque[i])
        {
            for(j=rear=1; j>i; j--)
            {
                priorque[j]=priorque[j-1];
            }
            priorque[i]=data;
            return;
        }
    }
    priorque[i]=data;
}

void display()
{
    if((front==-1)&&(rear==-1))
    {
        printf("Queue is empty.");
        return;
    }
    for(;front<=rear;front++)
    {
        printf("%d",priorque[front]);
    }
    front=0;
}

void main()
{
    int n,ch;
    printf("\n1) Insert\n2) Delete\n3) Display\n4) Exit");
    create();
    while(1)
    {
        printf("Enter your choice: ");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: printf("\nEnter value to be inserted: ");
                    scanf("%d",&n);
                    insert_by_prior(n);
                    break;
                    
            case 2: printf("\nEnter value to be deleted: ");
                    scanf("%d",&n);
                    delete_by_prior(n);
                    break;
                    
            case 3: display();
                    break;
                    
            case 4: exit(0);
            
            default: printf("\nInvalid choice.")
        }
    }
}
